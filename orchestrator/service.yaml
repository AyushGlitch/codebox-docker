apiVersion: apps/v1
kind: Deployment
metadata:
  name: service_name
  labels:
    app: service_name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service_name
  template:
    metadata:
      labels:
        app: service_name
    spec:
      volumes:
        - name: workspace-volume
          emptyDir: {}
      initContainers:
        - name: copy-minio-resources
          image: minio/mc
          command: ["/bin/sh", "-c"]
          args:
            - >
              mc alias set myminio https://$MINIO_ENDPOINT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY &&
              mc cp --recursive myminio/code-box/codebox/service_name/ /workspace/ &&
              chmod +x /workspace/run.sh &&
              echo "Resources copied from MinIO";
          env:
            - name: MINIO_ENDPOINT
              value: "play.min.io:9000"
            - name: MINIO_ACCESS_KEY
              value: "76741yNVyrKihDSfCuIJ"
            - name: MINIO_SECRET_KEY
              value: "pek2quhBBHunJPfHXrGp54eslrqL51HfzF2Fzr40"
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace
      containers:
        - name: runner
          image: glitchayush/codebox-engine:latest
          # command: ["/bin/bash", "-c"]
          # args:
          #   - >
          #     echo "Running the run.sh script...";
          #     if [ -f /workspace/run.sh ]; then
          #       echo "Started running the run.sh script..." &&
          #       source /workspace/run.sh &&
          #       echo "Run script executed";
          #     else
          #       echo "run.sh not found in /workspace";
          #     fi;
          ports:
            - containerPort: 3001
            - containerPort: 3000
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace

---
apiVersion: v1
kind: Service
metadata:
  name: service_name
spec:
  selector:
    app: service_name
  ports:
    - name: http-port-3001  # Add a name for this port
      port: 3001
      targetPort: 3001
    - name: http-port-3000  # Add a name for this port
      port: 3000
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: service_name
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service_name
            port:
              number: 3001
  # - host: service_name.autogpt-cloud.com
  #   http:
  #     paths:
  #     - path: /
  #       pathType: Prefix
  #       backend:
  #         service:
  #           name: service_name
  #           port:
  #             number: 3000
